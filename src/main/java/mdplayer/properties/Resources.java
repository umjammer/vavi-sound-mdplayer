//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

package mdplayer.properties;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.imageio.ImageIO;
import javax.swing.Icon;


/**
 * ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
 */
public class Resources {

    private static ResourceBundle resourceMan;

    private static Locale resourceCulture;

    //@System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    private Resources() {
    }

    /**
     * このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
     */
    //@System.ComponentModel.EditorBrowsableAttribute(ComponentModel.EditorBrowsableState.Advanced)]
    public static ResourceBundle getResourceManager() {

        if (resourceMan == null) {
            ResourceBundle temp = ResourceBundle.getBundle("mdplayer/properties/resources");
            resourceMan = temp;
        }
        return resourceMan;
    }

    /**
     * すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
     * 現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
     */
    //@System.ComponentModel.EditorBrowsableAttribute(ComponentModel.EditorBrowsableState.Advanced)]
    public static Locale getCulture() {

        return resourceCulture;
    }

    void setCulture(Locale value) {
        resourceCulture = value;
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getImage(String name) {
        try {
            return ImageIO.read(Resources.class.getResourceAsStream("/mdplayer/resources/" + name + ".png"));
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getaddFolderPL() {

        return getImage("addFolderPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getaddPL() {

        return getImage("addPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccFadeout() {

        return getImage("ccFadeout");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccFast() {

        return getImage("ccFast");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccInformation() {

        return getImage("ccInformation");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccKBD() {

        return getImage("ccKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccLoop() {

        return getImage("ccLoop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccLoopOne() {

        return getImage("ccLoopOne");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccMIDIKBD() {

        return getImage("ccMIDIKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccMixer() {

        return getImage("ccMixer");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccNext() {

        return getImage("ccNext");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccOpenFolder() {

        return getImage("ccOpenFolder");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccPause() {

        return getImage("ccPause");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccPlay() {

        return getImage("ccPlay");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccPlayList() {

        return getImage("ccPlayList");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccPrevious() {

        return getImage("ccPrevious");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccRandom() {

        return getImage("ccRandom");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccSetting() {

        return getImage("ccSetting");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccSlow() {

        return getImage("ccSlow");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccStep() {

        return getImage("ccStep");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccStop() {

        return getImage("ccStop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccVST() {

        return getImage("ccVST");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getccZoom() {

        return getImage("ccZoom");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchFadeout() {

        return getImage("chFadeout");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchFast() {

        return getImage("chFast");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchInformation() {

        return getImage("chInformation");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchKBD() {

        return getImage("chKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchLoop() {

        return getImage("chLoop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchLoopOne() {

        return getImage("chLoopOne");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchMIDIKBD() {
        return getImage("chMIDIKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchMixer() {
        return getImage("chMixer");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchNext() {
        return getImage("chNext");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchOpenFolder() {
        return getImage("chOpenFolder");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchPause() {
        return getImage("chPause");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchPlay() {
        return getImage("chPlay");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchPlayList() {
        return getImage("chPlayList");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchPrevious() {
        return getImage("chPrevious");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchRandom() {
        return getImage("chRandom");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchSetting() {
        return getImage("chSetting");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchSlow() {

        return getImage("chSlow");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchStep() {

        return getImage("chStep");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchStop() {

        return getImage("chStop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchVST() {

        return getImage("chVST");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getchZoom() {

        return getImage("chZoom");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciFadeout() {

        return getImage("ciFadeout");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciFast() {

        return getImage("ciFast");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciInformation() {

        return getImage("ciInformation");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciKBD() {

        return getImage("ciKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciLoop() {

        return getImage("ciLoop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciLoopOne() {

        return getImage("ciLoopOne");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciMIDIKBD() {

        return getImage("ciMIDIKBD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciMixer() {

        return getImage("ciMixer");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciNext() {

        return getImage("ciNext");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciOpenFolder() {

        return getImage("ciOpenFolder");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciPause() {

        return getImage("ciPause");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciPlay() {

        return getImage("ciPlay");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciPlayList() {

        return getImage("ciPlayList");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciPrevious() {

        return getImage("ciPrevious");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciRandom() {

        return getImage("ciRandom");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciSetting() {

        return getImage("ciSetting");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciSlow() {

        return getImage("ciSlow");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciStep() {

        return getImage("ciStep");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciStop() {

        return getImage("ciStop");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciVST() {

        return getImage("ciVST");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getciZoom() {

        return getImage("ciZoom");
    }

    /**
     * MDPlayer
     * VGMファイルなどのPlayer(メガドライブ音源チップなどのエミュレーションによる演奏ツール)
     * <p>
     * [概要]
     * このツールは、鍵盤表示を行いながらVGMファイルの再生を行います。
     * (NRD,XGM,S98,MID,RCP,NSF,HES,Sid,MDR,MDX,MND,MUC(TBD),MUB(TBD)ファイルにも対応。)
     * <p>
     * [注意]
     * ・再生時の音量に注意してください。バグによる雑音が大音量で再生される場合もあります。
     * (特に再生したことのないファイルを試す場合や、プログラムを更新した場合。)
     * <p>
     * ・使用中に不具合を見つけた場合はお手数ですがTwitter(@kumakumakumaT_T)までご連絡ください。
     * (VGMPlayやNRTDRV、その他素晴らしいソフトウェアの作者様方に、
     * 直接MDPlayerについての連絡がいくことの無い様にお願いします。)
     * できるかぎり対応させていただくつもりですが、ご希望に添えないことも多々あります。ご了承ください。
     * <p>
     * [対応フォーマ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getCntDescription() {

        return resourceMan.getString("cntDescription");
    }

    /**
     * 例外発生:\n- Type ------\n%d\n- Message ------\n%d\n- Source ------\n%d\n- StackTrace ------\n%d\n に類似しているローカライズされた文字列を検索します。
     */
    public static String getCntExceptionFormat() {

        return resourceMan.getString("cntExceptionFormat");
    }

    /**
     * 内部例外:\n- Type ------\n%d\n- Message ------\n%d\n- Source ------\n%d\n- StackTrace ------\n%d\n に類似しているローカライズされた文字列を検索します。
     */
    public static String getcntInnerExceptionFormat() {

        return resourceMan.getString("cntInnerExceptionFormat");
    }

    /**
     * Log.txt に類似しているローカライズされた文字列を検索します。
     */
    public static String getCntLogFilename() {

        return resourceMan.getString("cntLogFilename");
    }

    /**
     * Setting.xml に類似しているローカライズされた文字列を検索します。
     */
    public static String getcntSettingFileName() {

        return resourceMan.getString("cntSettingFileName");
    }

    /**
     * VGMファイル(*.Vgm;*.vgz)|*.Vgm;*.vgz|
     * XGMファイル(*.Xgm)|*.Xgm|
     * ZGMファイル(*.Zgm)|*.Zgm|
     * HESファイル(*.Hes)|*.Hes|
     * MDRファイル(*.mdr)|*.mdr|
     * MDXファイル(*.mdx)|*.mdx|
     * MGSファイル(*.mgs)|*.mgs|
     * MNDファイル(*.mnd)|*.mnd|
     * MUCOM88ファイル(*.mub;*.muc)|*.mub;*.muc|
     * NRDファイル(*.nrd)|*.nrd|
     * NSFファイル(*.Nsf)|*.Nsf|
     * PMDファイル(*.m;*.m2;*.mz;*.mml)|*.m;*.m2;*.mz;*.mml|
     * RCPファイル(*.rcp)|*.rcp|
     * S98ファイル(*.s98)|*.s98|
     * SIDファイル(*.Sid)|*.Sid|
     * StandardMIDIファイル(*.mid)|*.mid|
     * WAVファイル(*.wav)|*.wav|
     * MP3ファイル(*.mp3)|*.mp3|
     * AIFFファイル(*.aiff)|*.aiff|
     * M3Uファイル [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getCntSupportFile() {

        return resourceMan.getString("cntSupportFile");
    }

    /**
     * yyyy/MM/dd HH:mm:ss     に類似しているローカライズされた文字列を検索します。
     */
    public static String getCntTimeFormat() {

        return resourceMan.getString("cntTimeFormat");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_HES() {

        return resourceMan.getString("DefaultVolumeBalance_HES");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_MDR() {

        return resourceMan.getString("DefaultVolumeBalance_MDR");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;0&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCMVol [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_MDX() {

        return resourceMan.getString("DefaultVolumeBalance_MDX");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;0&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCMVol [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_MND() {

        return resourceMan.getString("DefaultVolumeBalance_MND");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_MUB() {

        return resourceMan.getString("DefaultVolumeBalance_MUB");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_MUC() {

        return resourceMan.getString("DefaultVolumeBalance_MUC");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_NRT() {

        return resourceMan.getString("DefaultVolumeBalance_NRT");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_NSF() {

        return resourceMan.getString("DefaultVolumeBalance_NSF");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;0&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCMVol [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_S98() {

        return resourceMan.getString("DefaultVolumeBalance_S98");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;-192&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-192&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCM [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_SID() {

        return resourceMan.getString("DefaultVolumeBalance_SID");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;0&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;0&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;0&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;0&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;0&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;0&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;0&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;0&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;0&lt;/SEGAPCMVolume&gt;
     * &lt;AY8910Volume&gt;0&lt; [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_VGM() {

        return resourceMan.getString("DefaultVolumeBalance_VGM");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;0&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-15&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCMVolu [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_XGM() {

        return resourceMan.getString("DefaultVolumeBalance_XGM");
    }

    /**
     * &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
     * &lt;Balance xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
     * &lt;MasterVolume&gt;0&lt;/MasterVolume&gt;
     * &lt;YM2612Volume&gt;0&lt;/YM2612Volume&gt;
     * &lt;SN76489Volume&gt;-15&lt;/SN76489Volume&gt;
     * &lt;RF5C68Volume&gt;-192&lt;/RF5C68Volume&gt;
     * &lt;RF5C164Volume&gt;-192&lt;/RF5C164Volume&gt;
     * &lt;PWMVolume&gt;-192&lt;/PWMVolume&gt;
     * &lt;C140Volume&gt;-192&lt;/C140Volume&gt;
     * &lt;OKIM6258Volume&gt;-192&lt;/OKIM6258Volume&gt;
     * &lt;OKIM6295Volume&gt;-192&lt;/OKIM6295Volume&gt;
     * &lt;SEGAPCMVolume&gt;-192&lt;/SEGAPCMVolu [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
     */
    public static String getDefaultVolumeBalance_ZGM() {

        return resourceMan.getString("DefaultVolumeBalance_ZGM");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getDownPL() {

        return getImage("downPL");
    }

    /**
     * (アイコン) に類似した型 Icon のローカライズされたリソースを検索します。
     */
    public static Icon getFeli128() {

        Object obj = resourceMan.getObject("Feli128");
        return ((Icon) (obj));
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getFeliAndMD2() {

        return getImage("FeliAndMD2");
    }

    /**
     * (アイコン) に類似した型 Icon のローカライズされたリソースを検索します。
     */
    public static Icon getFeliTop() {

        Object obj = resourceMan.getObject("FeliTop");
        return ((Icon) (obj));
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getimgPL() {

        return getImage("imgPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getjapPL() {

        return getImage("japPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getmmlPL() {

        return getImage("mmlPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getopenPL() {

        return getImage("openPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplane() {

        return getImage("plane");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneAY8910() {

        return getImage("planeAY8910");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneB() {

        return getImage("planeB");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getPlaneC() {

        return getImage("planeC");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneC352() {

        return getImage("planeC352");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getPlaneControl() {

        return getImage("planeControl");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getPlaneD() {

        return getImage("planeD");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneDMG() {

        return getImage("planeDMG");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneE() {

        return getImage("planeE");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getPlaneF() {

        return getImage("planeF");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneFDS() {

        return getImage("planeFDS");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneHuC6280() {

        return getImage("planeHuC6280");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneK051649() {

        return getImage("planeK051649");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMIDI_GM() {

        return getImage("planeMIDI_GM");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMIDI_GS() {

        return getImage("planeMIDI_GS");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMIDI_XG() {
        return getImage("planeMIDI_XG");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMixer() {
        return getImage("planeMixer");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMMC5() {

        return getImage("planeMMC5");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMSM6258() {

        return getImage("planeMSM6258");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMSM6295() {

        return getImage("planeMSM6295");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneMultiPCM() {

        return getImage("planeMultiPCM");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneN106() {

        return getImage("planeN106");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneNESDMC() {

        return getImage("planeNESDMC");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplanePPZ8() {

        return getImage("planePPZ8");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getPlaneQSound() {

        return getImage("planeQSound");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneS5B() {

        return getImage("planeS5B");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneSEGAPCM() {

        return getImage("planeSEGAPCM");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneSN76489() {

        return getImage("planeSN76489");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneVRC6() {

        return getImage("planeVRC6");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneVRC7() {

        return getImage("planeVRC7");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneY8950() {

        return getImage("planeY8950");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM2203() {

        return getImage("planeYM2203");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM2413() {

        return getImage("planeYM2413");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM2610() {

        return getImage("planeYM2610");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM2612() {

        return getImage("planeYM2612");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM2612MIDI() {

        return getImage("planeYM2612MIDI");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM3526() {

        return getImage("planeYM3526");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYM3812() {

        return getImage("planeYM3812");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYMF262() {

        return getImage("planeYMF262");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYMF271() {

        return getImage("planeYMF271");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYMF278B() {

        return getImage("planeYMF278B");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getplaneYMZ280B() {

        return getImage("planeYMZ280B");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrChipName_01() {

        return getImage("rChipName_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrChipName_02() {

        return getImage("rChipName_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrChipName_03() {

        return getImage("rChipName_03");
    }

    /**
     * 型 System.Byte[] のローカライズされたリソースを検索します。
     */
    public static byte[] getREADME() {

        Object obj = resourceMan.getObject("README");
        return ((byte[]) (obj));
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFader() {

        return getImage("rFader");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_01() {

        return getImage("rFont_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_02() {

        return getImage("rFont_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_03() {

        return getImage("rFont_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_04() {

        return getImage("rFont_04");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_05() {

        return getImage("rFont_05");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrFont_06() {

        return getImage("rFont_06");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrKakko_00() {

        return getImage("rKakko_00");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrKBD_01() {

        return getImage("rKBD_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrKBD_02() {

        return getImage("rKBD_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrKBD_03() {

        return getImage("rKBD_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMenuButtons_01() {

        return getImage("rMenuButtons_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMenuButtons_02() {

        return getImage("rMenuButtons_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_01() {

        return getImage("rMIDILCD_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_02() {

        return getImage("rMIDILCD_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_03() {

        return getImage("rMIDILCD_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Fader_01() {

        return getImage("rMIDILCD_Fader_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Fader_02() {

        return getImage("rMIDILCD_Fader_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Fader_03() {

        return getImage("rMIDILCD_Fader_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_01() {

        return getImage("rMIDILCD_Font_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_02() {

        return getImage("rMIDILCD_Font_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_03() {

        return getImage("rMIDILCD_Font_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_04() {

        return getImage("rMIDILCD_Font_04");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_05() {

        return getImage("rMIDILCD_Font_05");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Font_06() {

        return getImage("rMIDILCD_Font_06");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_KBD_01() {

        return getImage("rMIDILCD_KBD_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Vol_01() {

        return getImage("rMIDILCD_Vol_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Vol_02() {

        return getImage("rMIDILCD_Vol_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrMIDILCD_Vol_03() {

        return getImage("rMIDILCD_Vol_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrNESDMC() {

        return getImage("rNESDMC");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPan_01() {

        return getImage("rPan_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPan_02() {

        return getImage("rPan_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPan_03() {

        return getImage("rPan_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPan2_01() {

        return getImage("rPan2_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPan2_02() {

        return getImage("rPan2_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGEnv() {

        return getImage("rPSGEnv");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_01() {

        return getImage("rPSGMode_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_02() {

        return getImage("rPSGMode_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_03() {

        return getImage("rPSGMode_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_04() {

        return getImage("rPSGMode_04");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_05() {

        return getImage("rPSGMode_05");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrPSGMode_06() {

        return getImage("rPSGMode_06");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_01() {

        return getImage("rType_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_02() {

        return getImage("rType_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_03() {

        return getImage("rType_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_04() {

        return getImage("rType_04");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_05() {

        return getImage("rType_05");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_06() {

        return getImage("rType_06");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrType_YMF271() {

        return getImage("rType_YMF271");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrVol_01() {

        return getImage("rVol_01");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrVol_02() {

        return getImage("rVol_02");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrVol_03() {

        return getImage("rVol_03");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrWavGraph() {

        return getImage("rWavGraph");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getrWavGraph2() {

        return getImage("rWavGraph2");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getsavePL() {

        return getImage("savePL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage gettxtPL() {

        return getImage("txtPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getupPL() {

        return getImage("upPL");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVHeight1() {

        return getImage("vHeight1");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVHeight2() {

        return getImage("vHeight2");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVHeight3() {

        return getImage("vHeight3");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVType1() {

        return getImage("vType1");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVType2() {

        return getImage("vType2");
    }

    /**
     * 型 BufferedImage のローカライズされたリソースを検索します。
     */
    public static BufferedImage getVType3() {

        return getImage("vType3");
    }
}
